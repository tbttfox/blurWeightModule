name: build

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  #
  # Windows
  #   
  #       __
  #  |\__/  \
  #  |       |
  #  |    __ |
  #   \__/  \|
  #
  #   
  maya-win:
    runs-on: windows-2019

    strategy:
      # Without this, all containers stop if any fail
      # That's bad, we want to know whether it's only one
      # or if it happens to multiples or all.
      fail-fast: false

      matrix:
       include:
          - maya: "2019"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2019/Autodesk_Maya_2019_3_Update_DEVKIT_Windows.zip"
          - maya: "2020"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2020/Autodesk_Maya_2020_4_Update_DEVKIT_Windows.zip"
          - maya: "2022"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2022/Autodesk_Maya_2022_3_Update_DEVKIT_Windows.zip"
          - maya: "2023"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2023/Autodesk_Maya_2023_DEVKIT_Windows.zip"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Get the *ACTUAL* latest checkouts
      # The actions/checkout submodules doesn't do that, unfortunately
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote --force

      - name: Install devkit
        run: |
          Write-Host "Downloading Devkit: ${{matrix.devkit}}..."
          Invoke-WebRequest -Uri ${{matrix.devkit}} -OutFile "$pwd/devkit.zip"
          Write-Host "Extracting devkit.zip.."
          Expand-Archive -LiteralPath devkit.zip -DestinationPath $pwd

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION="${{matrix.maya}}" -DMAYA_DEVKIT_BASE="$pwd/devkitBase"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Repath Artifacts
        run: |
          mkdir artifacts/plug-ins
          Copy-Item "./build/submodules/blurSkin/${{env.BUILD_TYPE}}/blurSkin.mll" -Destination "artifacts/plug-ins"
          Copy-Item "./build/submodules/brSkinBrush/${{env.BUILD_TYPE}}/brSkinBrush.mll" -Destination "artifacts/plug-ins"
          Copy-Item "./build/submodules/wireframeDisplay/${{env.BUILD_TYPE}}/wireframeDisplay.mll" -Destination "artifacts/plug-ins"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{matrix.maya}}
          path: |
            artifacts/plug-ins/blurSkin.mll
            artifacts/plug-ins/brSkinBrush.mll
            artifacts/plug-ins/wireframeDisplay.mll

  maya-macos:
    runs-on: macos-10.15

    strategy:
      fail-fast: false

      matrix:
       include:
          - maya: "2019"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2019/Autodesk_Maya_2019_3_Update_DEVKIT_Mac.dmg"
          - maya: "2020"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2020/Autodesk_Maya_2020_4_Update_DEVKIT_Mac.dmg"
          - maya: "2022"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2022/Autodesk_Maya_2022_3_Update_DEVKIT_Mac.dmg"
          - maya: "2023"
            devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2023/Autodesk_Maya_2023_DEVKIT_Mac.dmg"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Get the *ACTUAL* latest checkouts
      # The actions/checkout submodules doesn't do that, unfortunately
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote --force

      - name: Install devkit
        run: |
          curl -o devkit.dmg ${{matrix.devkit}}
          7z x devkit.dmg

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '10.3'

      - name: Configure CMake
        run: |
          cmake -G Xcode -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION=${{matrix.maya}} -DMAYA_DEVKIT_BASE="$PWD/devkitBase"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Repath Artifacts
        run: |
          mkdir -p artifacts/plug-ins
          cp ./build/submodules/blurSkin/${{env.BUILD_TYPE}}/blurSkin.bundle artifacts/plug-ins
          cp ./build/submodules/brSkinBrush/${{env.BUILD_TYPE}}/brSkinBrush.bundle artifacts/plug-ins
          cp ./build/submodules/wireframeDisplay/${{env.BUILD_TYPE}}/wireframeDisplay.bundle artifacts/plug-ins

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-${{matrix.maya}}
          path: |
            artifacts/plug-ins/blurSkin.bundle
            artifacts/plug-ins/brSkinBrush.bundle
            artifacts/plug-ins/wireframeDisplay.bundle

  maya-linux:
    runs-on: ubuntu-latest
    container: scottenglert/maya-build:${{matrix.maya}}

    strategy:
      fail-fast: false

      matrix:
       include:
          - maya: "2019.3"
            year: "2019"
          - maya: "2020.4"
            year: "2020"
          - maya: "2022.3"
            year: "2022"
          - maya: "2023"
            year: "2023"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Get the *ACTUAL* latest checkouts
      # The actions/checkout submodules doesn't do that, unfortunately
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote --force

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION=${{matrix.maya}} -DMAYA_DEVKIT_BASE="/usr/autodesk/devkitBase" ..

      - name: Build
        run: cmake --build ./build --config ${{env.BUILD_TYPE}}

      - name: Repath Artifacts
        run: |
          mkdir -p artifacts/plug-ins
          cp ./build/submodules/blurSkin/blurSkin.so artifacts/plug-ins
          cp ./build/submodules/brSkinBrush/brSkinBrush.so artifacts/plug-ins
          cp ./build/submodules/wireframeDisplay/wireframeDisplay.so artifacts/plug-ins

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{matrix.year}}
          path: |
            artifacts/plug-ins/blurSkin.so
            artifacts/plug-ins/brSkinBrush.so
            artifacts/plug-ins/wireframeDisplay.so

#
# Shipping
#
#   _________
#  |\ _ _ _ _\
#  | \________\
#  | |        |
#  | |        |
#   \|________|
#
#
  upload_release:
    name: Upload release
    needs: [maya-win, maya-linux, maya-macos]
    runs-on: ubuntu-latest

    # Only run on e.g. v0.1.0
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Get the *ACTUAL* latest checkouts
      # The actions/checkout submodules doesn't do that, unfortunately
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote --force

      - name: Download artifacts
        uses: actions/download-artifact@v3

        # Omitting name: means "download all artifacts"
        # Destination directory structure:
        # ~/modules
        #   /blurWeightModule
        #    /<os_name>-<maya_major_version>
        #     /plug-ins
        #       blurSkin.mll
        #       brSkinBrush.mll
        #       wireframeDisplay.mll
        #   /blurWeightModule.mod

        with:
          path: modules/blurWeightModule

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create distribution
        run: |
          cp ./blurWeightModule.mod modules/
          mkdir -p modules/blurWeightModule/scripts
          cp -r ./submodules/mPaintEditor/mPaintEditor modules/blurWeightModule/scripts
          cp -r ./submodules/mWeightEditor/mWeightEditor modules/blurWeightModule/scripts
          cp -r ./submodules/brSkinBrush/moduleData/icons modules/blurWeightModule
          cp -r ./submodules/brSkinBrush/moduleData/scripts modules/blurWeightModule
          zip -r blurWeightModule-${{env.RELEASE_VERSION}}.zip modules/

      - name: Upload distribution
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            blurWeightModule-*.zip

     # - name: Debug with tmate on failure
     #   if: ${{ failure() }}
     #   uses: mxschmitt/action-tmate@v3

